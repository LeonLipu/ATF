
def pipeline(Map<String,String> dataSet){

    stage('BuildGeneration'){

        sh 'mvn install -DskipTests'

    }

    stage("Starting API Server"){
        //start jenkin server by java -Dhudson.util.ProcessTree.disable=true -jar jenkins.war --httpPort=8090 to support background job
        withEnv(['BUILD_ID=dontkill']) {
            sh 'mvn exec:java -Dexec.mainClass="APPLICATION_SERVER.App" & '
        }
    }

    stage('check server up '){
        def status=7;
        while (status == 7){
            status = sh (script: 'curl -sL -w "%{http_code}\\n" "http://localhost:8080/" -o /dev/null',returnStatus: true)
            sleep(2);
        }
    }
    stage('Selenium_Automation'){

        sh 'mvn test -DsuiteXmlFile=selenium.xml'
        junit '**/target/surefire-reports/TEST-*.xml'

    }

    stage('API_Automation'){

        sh 'mvn clean '
        sh 'mvn test -DsuiteXmlFile=RestApi.xml'
        junit '**/target/surefire-reports/TEST-*.xml'

    }
    stage('Stoping API Server'){

        sh "lsof -t -i :8080|xargs kill -9 "

    }

}




return this;
